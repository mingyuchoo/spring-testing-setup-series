plugins {
  id 'com.diffplug.spotless' version '5.11.0'
  id 'org.springframework.boot' version '2.4.4'
  id 'io.spring.dependency-management' version '1.0.11.RELEASE'
  id 'org.asciidoctor.convert' version '1.5.8'
  id 'org.sonarqube' version '3.1.1'
  id 'jacoco'
  id 'java'
}

group 'com.mingyuchoo'
version '0.0.1-SNAPSHOT'
sourceCompatibility = '8'

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
  cucumberRuntime {
    extendsFrom testImplementation
  }
}
repositories {
  mavenCentral()
}

ext {
  set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  compileOnly 'org.projectlombok:lombok'
  runtimeOnly 'com.h2database:h2'
  annotationProcessor 'org.projectlombok:lombok'
  testImplementation('org.springframework.boot:spring-boot-starter-test') {
    exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
  }
  testImplementation 'org.springframework.boot:spring-boot-starter-webflux'
  testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
  testImplementation 'io.cucumber:cucumber-java:6.9.1'
  testImplementation 'io.cucumber:cucumber-junit:6.9.1'
  testImplementation 'io.cucumber:cucumber-spring:6.9.1'
  //  testImplementation 'io.rest-assured:rest-assured:4.2.1'
  //  testImplementation 'io.rest-assured:rest-assured-common:4.2.1'
  //  testImplementation 'io.rest-assured:json-path:4.2.1'
  //  testImplementation 'io.rest-assured:json-schema-validator:4.2.1'
  //  testImplementation 'io.rest-assured:spring-mock-mvc:4.2.1'
  //  testImplementation 'io.rest-assured:spring-web-test-client:4.2.1'
  //  testImplementation 'io.rest-assured:xml-path:4.2.1'
}

test {
  dependsOn 'spotlessApply'
  useJUnitPlatform()
  finalizedBy jacocoTestReport
}

asciidoctor {
  inputs.dir snippetsDir
  dependsOn test
}

sonarqube {
  properties {
    property 'sonar.sourceEncoding', 'UTF-8'
  }
}

jacoco {
  toolVersion = "0.8.6"
}

jacocoTestReport {
  dependsOn test
}

spotless {
  java {
    importOrder()
    removeUnusedImports()
    googleJavaFormat('1.7').aosp()
    indentWithSpaces(4)
    trimTrailingWhitespace()
    endWithNewline()
  }
  groovyGradle {
    target '**/*.gradle'
    greclipse().configFile('greclipse.properties')
    endWithNewline()
    indentWithSpaces(2)
    trimTrailingWhitespace()
  }
  format 'misc', {
    target '**/*.gradle', '**/*.yaml', '**/*.yml', '**/*.md', '**/.gitignore'
    trimTrailingWhitespace()
    indentWithSpaces(2)
    endWithNewline()
  }
}

task cucumber() {
  dependsOn assemble, testClasses
  doLast {
    javaexec {
      main = "io.cucumber.core.cli.Main"
      classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
      args = [
        '--plugin',
        'pretty',
        '--glue',
        'com.mingyuchoo.demo',
        'src/test/resources'
      ]
    }
  }
}
